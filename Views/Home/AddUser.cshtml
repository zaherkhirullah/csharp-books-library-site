@{
    ViewBag.Title = "Add User";
}
@model ZHYR_Library.Models.RegisterViewModel



    <!-- Section Contact -->
    <section id="contact" class="section contact">
        <div class="container">
            <div class="col-md-8">
                <div class="form-wrap">
                    @*@using (Html.BeginForm("AddUser", "Home", FormMethod.Post))
                {*@<div class="form-group label-floating">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" ,id= "UserName" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group label-floating">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", id = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group label-floating">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " , id = "Password" })
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group label-floating">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label " , id = "ConfirmPassword" })
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                    </div>

                    <a onclick="Register()" class="btn btn-primary">Register</a>

                    @* } *@
                </div>
            </div>
            
        </div>
    </section>
<div class="col-md-12">
    <div class="form-wrap">
        <table id="myTable" class="table table-hover">
            <tr>
                <th>UserName</th>
                <th>Email</th>
                <th>password</th>
            </tr>
        </table>
    </div>
</div>
<script src="~/Scripts/jquery-3.1.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script type="text/javascript">
    function Register() {
        var username = $("#UserName").val();
        var email = $("#Email").val();
        var password = $("#Password").val();
        var confirmPassword = $("#ConfirmPassword").val();
        $.ajax({
            type: "Post",
            url: "/Home/AddUser",
            data: JSON.stringify({ UserName: username, Email: email, Password: passwor, ConfirmPassword: confirmPassword }),
            contentType: "application/json",
            success: function (result) {
                $("myTable").append("<tr><td>" +
                    result.UserName + "</td><td>" +
                    result.Email + "</td></tr>");

                $("#UserName").val("");
                $("#Email").val("");
                $("#Password").val("");
                $("#ConfirmPassword").val("");
            }
        });
    }
</script>